import { OnInit, OnDestroy, AfterViewInit, AfterViewChecked, AfterContentInit, EventEmitter, ElementRef, TemplateRef, QueryList, NgZone, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';
import { PrimeTemplate } from 'primeng/api';
import { SortMeta } from 'primeng/api';
import { FilterMetadata } from 'primeng/api';
import { BlockableUI } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/paginator';
import * as ɵngcc3 from 'primeng/api';
export declare class TableService {
    private sortSource;
    private selectionSource;
    private contextMenuSource;
    private valueSource;
    private totalRecordsSource;
    private columnsSource;
    sortSource$: import("rxjs").Observable<SortMeta | SortMeta[]>;
    selectionSource$: import("rxjs").Observable<unknown>;
    contextMenuSource$: import("rxjs").Observable<any>;
    valueSource$: import("rxjs").Observable<any>;
    totalRecordsSource$: import("rxjs").Observable<any>;
    columnsSource$: import("rxjs").Observable<unknown>;
    onSort(sortMeta: SortMeta | SortMeta[]): void;
    onSelectionChange(): void;
    onContextMenu(data: any): void;
    onValueChange(value: any): void;
    onTotalRecordsChange(value: number): void;
    onColumnsChange(columns: any[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<TableService>;
}
export declare class Table implements OnInit, AfterViewInit, AfterContentInit, BlockableUI, OnChanges {
    el: ElementRef;
    zone: NgZone;
    tableService: TableService;
    cd: ChangeDetectorRef;
    frozenColumns: any[];
    frozenValue: any[];
    style: any;
    styleClass: string;
    tableStyle: any;
    tableStyleClass: string;
    paginator: boolean;
    pageLinks: number;
    rowsPerPageOptions: any[];
    alwaysShowPaginator: boolean;
    paginatorPosition: string;
    paginatorDropdownAppendTo: any;
    paginatorDropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    defaultSortOrder: number;
    sortMode: string;
    resetPageOnSort: boolean;
    selectionMode: string;
    selectionChange: EventEmitter<any>;
    contextMenuSelection: any;
    contextMenuSelectionChange: EventEmitter<any>;
    contextMenuSelectionMode: string;
    dataKey: string;
    metaKeySelection: boolean;
    rowTrackBy: Function;
    lazy: boolean;
    lazyLoadOnInit: boolean;
    compareSelectionBy: string;
    csvSeparator: string;
    exportFilename: string;
    filters: {
        [s: string]: FilterMetadata;
    };
    globalFilterFields: string[];
    filterDelay: number;
    expandedRowKeys: {
        [s: string]: boolean;
    };
    editingRowKeys: {
        [s: string]: boolean;
    };
    rowExpandMode: string;
    scrollable: boolean;
    scrollHeight: string;
    virtualScroll: boolean;
    virtualScrollDelay: number;
    virtualRowHeight: number;
    frozenWidth: string;
    responsive: boolean;
    contextMenu: any;
    resizableColumns: boolean;
    columnResizeMode: string;
    reorderableColumns: boolean;
    loading: boolean;
    loadingIcon: string;
    showLoader: boolean;
    rowHover: boolean;
    customSort: boolean;
    autoLayout: boolean;
    exportFunction: any;
    stateKey: string;
    stateStorage: string;
    editMode: string;
    onRowSelect: EventEmitter<any>;
    onRowUnselect: EventEmitter<any>;
    onPage: EventEmitter<any>;
    onSort: EventEmitter<any>;
    onFilter: EventEmitter<any>;
    onLazyLoad: EventEmitter<any>;
    onRowExpand: EventEmitter<any>;
    onRowCollapse: EventEmitter<any>;
    onContextMenuSelect: EventEmitter<any>;
    onColResize: EventEmitter<any>;
    onColReorder: EventEmitter<any>;
    onRowReorder: EventEmitter<any>;
    onEditInit: EventEmitter<any>;
    onEditComplete: EventEmitter<any>;
    onEditCancel: EventEmitter<any>;
    onHeaderCheckboxToggle: EventEmitter<any>;
    sortFunction: EventEmitter<any>;
    firstChange: EventEmitter<number>;
    rowsChange: EventEmitter<number>;
    onStateSave: EventEmitter<any>;
    onStateRestore: EventEmitter<any>;
    containerViewChild: ElementRef;
    resizeHelperViewChild: ElementRef;
    reorderIndicatorUpViewChild: ElementRef;
    reorderIndicatorDownViewChild: ElementRef;
    tableViewChild: ElementRef;
    templates: QueryList<PrimeTemplate>;
    _value: any[];
    _columns: any[];
    _totalRecords: number;
    _first: number;
    _rows: number;
    filteredValue: any[];
    headerTemplate: TemplateRef<any>;
    bodyTemplate: TemplateRef<any>;
    loadingBodyTemplate: TemplateRef<any>;
    captionTemplate: TemplateRef<any>;
    frozenRowsTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    summaryTemplate: TemplateRef<any>;
    colGroupTemplate: TemplateRef<any>;
    expandedRowTemplate: TemplateRef<any>;
    frozenHeaderTemplate: TemplateRef<any>;
    frozenBodyTemplate: TemplateRef<any>;
    frozenFooterTemplate: TemplateRef<any>;
    frozenColGroupTemplate: TemplateRef<any>;
    emptyMessageTemplate: TemplateRef<any>;
    paginatorLeftTemplate: TemplateRef<any>;
    paginatorRightTemplate: TemplateRef<any>;
    selectionKeys: any;
    lastResizerHelperX: number;
    reorderIconWidth: number;
    reorderIconHeight: number;
    draggedColumn: any;
    draggedRowIndex: number;
    droppedRowIndex: number;
    rowDragging: boolean;
    dropPosition: number;
    editingCell: Element;
    editingCellData: any;
    editingCellField: any;
    editingCellClick: boolean;
    documentEditListener: any;
    _multiSortMeta: SortMeta[];
    _sortField: string;
    _sortOrder: number;
    virtualScrollTimer: any;
    virtualScrollCallback: Function;
    preventSelectionSetterPropagation: boolean;
    _selection: any;
    anchorRowIndex: number;
    rangeRowIndex: number;
    filterTimeout: any;
    initialized: boolean;
    rowTouched: boolean;
    restoringSort: boolean;
    restoringFilter: boolean;
    stateRestored: boolean;
    columnOrderStateRestored: boolean;
    columnWidthsState: string;
    tableWidthState: string;
    constructor(el: ElementRef, zone: NgZone, tableService: TableService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(simpleChange: SimpleChanges): void;
    value: any[];
    columns: any[];
    first: number;
    rows: number;
    totalRecords: number;
    sortField: string;
    sortOrder: number;
    multiSortMeta: SortMeta[];
    selection: any;
    updateSelectionKeys(): void;
    onPageChange(event: any): void;
    sort(event: any): void;
    sortSingle(): void;
    sortMultiple(): void;
    multisortField(data1: any, data2: any, multiSortMeta: any, index: any): any;
    getSortMeta(field: string): SortMeta;
    isSorted(field: string): boolean;
    handleRowClick(event: any): void;
    handleRowTouchEnd(event: any): void;
    handleRowRightClick(event: any): void;
    selectRange(event: MouseEvent, rowIndex: number): void;
    clearSelectionRange(event: MouseEvent): void;
    isSelected(rowData: any): boolean;
    findIndexInSelection(rowData: any): number;
    toggleRowWithRadio(event: any, rowData: any): void;
    toggleRowWithCheckbox(event: any, rowData: any): void;
    toggleRowsWithCheckbox(event: Event, check: boolean): void;
    equals(data1: any, data2: any): boolean;
    filter(value: any, field: any, matchMode: any): void;
    filterGlobal(value: any, matchMode: any): void;
    isFilterBlank(filter: any): boolean;
    _filter(): void;
    hasFilter(): boolean;
    createLazyLoadMetadata(): any;
    reset(): void;
    exportCSV(options?: any): void;
    updateEditingCell(cell: any, data: any, field: any): void;
    isEditingCellValid(): boolean;
    bindDocumentEditListener(): void;
    unbindDocumentEditListener(): void;
    initRowEdit(rowData: any): void;
    saveRowEdit(rowData: any, rowElement: HTMLTableRowElement): void;
    cancelRowEdit(rowData: any): void;
    toggleRow(rowData: any, event?: Event): void;
    isRowExpanded(rowData: any): boolean;
    isRowEditing(rowData: any): boolean;
    isSingleSelectionMode(): boolean;
    isMultipleSelectionMode(): boolean;
    onColumnResizeBegin(event: any): void;
    onColumnResize(event: any): void;
    onColumnResizeEnd(event: any, column: any): void;
    setScrollableItemsWidthOnExpandResize(column: any, newColumnWidth: any, delta: any): void;
    findParentScrollableView(column: any): any;
    resizeColGroup(table: any, resizeColumnIndex: any, newColumnWidth: any, nextColumnWidth: any): void;
    onColumnDragStart(event: any, columnElement: any): void;
    onColumnDragEnter(event: any, dropHeader: any): void;
    onColumnDragLeave(event: any): void;
    onColumnDrop(event: any, dropColumn: any): void;
    onRowDragStart(event: any, index: any): void;
    onRowDragOver(event: any, index: any, rowElement: any): void;
    onRowDragLeave(event: any, rowElement: any): void;
    onRowDragEnd(event: any): void;
    onRowDrop(event: any, rowElement: any): void;
    handleVirtualScroll(event: any): void;
    isEmpty(): boolean;
    getBlockableElement(): HTMLElement;
    getStorage(): Storage;
    isStateful(): boolean;
    saveState(): void;
    clearState(): void;
    restoreState(): void;
    saveColumnWidths(state: any): void;
    restoreColumnWidths(): void;
    saveColumnOrder(state: any): void;
    restoreColumnOrder(): void;
    findColumnByKey(key: any): any;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Table>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Table, "p-table", never, {
    "pageLinks": "pageLinks";
    "alwaysShowPaginator": "alwaysShowPaginator";
    "paginatorPosition": "paginatorPosition";
    "paginatorDropdownScrollHeight": "paginatorDropdownScrollHeight";
    "currentPageReportTemplate": "currentPageReportTemplate";
    "defaultSortOrder": "defaultSortOrder";
    "sortMode": "sortMode";
    "resetPageOnSort": "resetPageOnSort";
    "contextMenuSelectionMode": "contextMenuSelectionMode";
    "rowTrackBy": "rowTrackBy";
    "lazy": "lazy";
    "lazyLoadOnInit": "lazyLoadOnInit";
    "compareSelectionBy": "compareSelectionBy";
    "csvSeparator": "csvSeparator";
    "exportFilename": "exportFilename";
    "filters": "filters";
    "filterDelay": "filterDelay";
    "expandedRowKeys": "expandedRowKeys";
    "editingRowKeys": "editingRowKeys";
    "rowExpandMode": "rowExpandMode";
    "virtualScrollDelay": "virtualScrollDelay";
    "virtualRowHeight": "virtualRowHeight";
    "columnResizeMode": "columnResizeMode";
    "loadingIcon": "loadingIcon";
    "showLoader": "showLoader";
    "stateStorage": "stateStorage";
    "editMode": "editMode";
    "totalRecords": "totalRecords";
    "value": "value";
    "columns": "columns";
    "first": "first";
    "rows": "rows";
    "sortField": "sortField";
    "sortOrder": "sortOrder";
    "multiSortMeta": "multiSortMeta";
    "selection": "selection";
    "contextMenuSelection": "contextMenuSelection";
    "frozenColumns": "frozenColumns";
    "frozenValue": "frozenValue";
    "style": "style";
    "styleClass": "styleClass";
    "tableStyle": "tableStyle";
    "tableStyleClass": "tableStyleClass";
    "paginator": "paginator";
    "rowsPerPageOptions": "rowsPerPageOptions";
    "paginatorDropdownAppendTo": "paginatorDropdownAppendTo";
    "showCurrentPageReport": "showCurrentPageReport";
    "selectionMode": "selectionMode";
    "dataKey": "dataKey";
    "metaKeySelection": "metaKeySelection";
    "globalFilterFields": "globalFilterFields";
    "scrollable": "scrollable";
    "scrollHeight": "scrollHeight";
    "virtualScroll": "virtualScroll";
    "frozenWidth": "frozenWidth";
    "responsive": "responsive";
    "contextMenu": "contextMenu";
    "resizableColumns": "resizableColumns";
    "reorderableColumns": "reorderableColumns";
    "loading": "loading";
    "rowHover": "rowHover";
    "customSort": "customSort";
    "autoLayout": "autoLayout";
    "exportFunction": "exportFunction";
    "stateKey": "stateKey";
}, {
    "selectionChange": "selectionChange";
    "contextMenuSelectionChange": "contextMenuSelectionChange";
    "onRowSelect": "onRowSelect";
    "onRowUnselect": "onRowUnselect";
    "onPage": "onPage";
    "onSort": "onSort";
    "onFilter": "onFilter";
    "onLazyLoad": "onLazyLoad";
    "onRowExpand": "onRowExpand";
    "onRowCollapse": "onRowCollapse";
    "onContextMenuSelect": "onContextMenuSelect";
    "onColResize": "onColResize";
    "onColReorder": "onColReorder";
    "onRowReorder": "onRowReorder";
    "onEditInit": "onEditInit";
    "onEditComplete": "onEditComplete";
    "onEditCancel": "onEditCancel";
    "onHeaderCheckboxToggle": "onHeaderCheckboxToggle";
    "sortFunction": "sortFunction";
    "firstChange": "firstChange";
    "rowsChange": "rowsChange";
    "onStateSave": "onStateSave";
    "onStateRestore": "onStateRestore";
}, ["templates"]>;
}
export declare class TableBody {
    dt: Table;
    columns: any[];
    template: TemplateRef<any>;
    frozen: boolean;
    constructor(dt: Table);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableBody>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableBody, "[pTableBody]", never, {
    "columns": "pTableBody";
    "template": "pTableBodyTemplate";
    "frozen": "frozen";
}, {}, never>;
}
export declare class ScrollableView implements AfterViewInit, OnDestroy, AfterViewChecked {
    dt: Table;
    el: ElementRef;
    zone: NgZone;
    columns: any[];
    frozen: boolean;
    scrollHeaderViewChild: ElementRef;
    scrollHeaderBoxViewChild: ElementRef;
    scrollBodyViewChild: ElementRef;
    scrollTableViewChild: ElementRef;
    scrollLoadingTableViewChild: ElementRef;
    scrollFooterViewChild: ElementRef;
    scrollFooterBoxViewChild: ElementRef;
    virtualScrollerViewChild: ElementRef;
    scrollableAlignerViewChild: ElementRef;
    headerScrollListener: Function;
    bodyScrollListener: Function;
    footerScrollListener: Function;
    frozenSiblingBody: Element;
    scrollableSiblingBody: Element;
    _scrollHeight: string;
    subscription: Subscription;
    totalRecordsSubscription: Subscription;
    columnsSubscription: Subscription;
    initialized: boolean;
    preventBodyScrollPropagation: boolean;
    loadingArray: number[];
    constructor(dt: Table, el: ElementRef, zone: NgZone);
    scrollHeight: string;
    ngAfterViewChecked(): void;
    ngAfterViewInit(): void;
    bindEvents(): void;
    unbindEvents(): void;
    onHeaderScroll(event: any): void;
    onFooterScroll(event: any): void;
    onBodyScroll(event: any): void;
    setScrollHeight(): void;
    setVirtualScrollerHeight(): void;
    hasVerticalOverflow(): boolean;
    alignScrollBar(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ScrollableView>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ScrollableView, "[pScrollableView]", never, {
    "scrollHeight": "scrollHeight";
    "columns": "pScrollableView";
    "frozen": "frozen";
}, {}, never>;
}
export declare class SortableColumn implements OnInit, OnDestroy {
    dt: Table;
    field: string;
    pSortableColumnDisabled: boolean;
    sorted: boolean;
    subscription: Subscription;
    constructor(dt: Table);
    ngOnInit(): void;
    updateSortState(): void;
    onClick(event: MouseEvent): void;
    onEnterKey(event: MouseEvent): void;
    isEnabled(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SortableColumn>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SortableColumn, "[pSortableColumn]", never, {
    "field": "pSortableColumn";
    "pSortableColumnDisabled": "pSortableColumnDisabled";
}, {}, never>;
}
export declare class SortIcon implements OnInit, OnDestroy {
    dt: Table;
    field: string;
    subscription: Subscription;
    sortOrder: number;
    constructor(dt: Table);
    ngOnInit(): void;
    onClick(event: any): void;
    updateSortState(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SortIcon>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SortIcon, "p-sortIcon", never, {
    "field": "field";
}, {}, never>;
}
export declare class SelectableRow implements OnInit, OnDestroy {
    dt: Table;
    tableService: TableService;
    data: any;
    index: number;
    pSelectableRowDisabled: boolean;
    selected: boolean;
    subscription: Subscription;
    constructor(dt: Table, tableService: TableService);
    ngOnInit(): void;
    onClick(event: Event): void;
    onTouchEnd(event: Event): void;
    onKeyDown(event: KeyboardEvent): void;
    findNextSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement;
    findPrevSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement;
    isEnabled(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SelectableRow>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SelectableRow, "[pSelectableRow]", never, {
    "data": "pSelectableRow";
    "index": "pSelectableRowIndex";
    "pSelectableRowDisabled": "pSelectableRowDisabled";
}, {}, never>;
}
export declare class SelectableRowDblClick implements OnInit, OnDestroy {
    dt: Table;
    tableService: TableService;
    data: any;
    index: number;
    pSelectableRowDisabled: boolean;
    selected: boolean;
    subscription: Subscription;
    constructor(dt: Table, tableService: TableService);
    ngOnInit(): void;
    onClick(event: Event): void;
    isEnabled(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SelectableRowDblClick>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SelectableRowDblClick, "[pSelectableRowDblClick]", never, {
    "data": "pSelectableRowDblClick";
    "index": "pSelectableRowIndex";
    "pSelectableRowDisabled": "pSelectableRowDisabled";
}, {}, never>;
}
export declare class ContextMenuRow {
    dt: Table;
    tableService: TableService;
    data: any;
    index: number;
    pContextMenuRowDisabled: boolean;
    selected: boolean;
    subscription: Subscription;
    constructor(dt: Table, tableService: TableService);
    onContextMenu(event: Event): void;
    isEnabled(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ContextMenuRow>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ContextMenuRow, "[pContextMenuRow]", never, {
    "data": "pContextMenuRow";
    "index": "pContextMenuRowIndex";
    "pContextMenuRowDisabled": "pContextMenuRowDisabled";
}, {}, never>;
}
export declare class RowToggler {
    dt: Table;
    data: any;
    pRowTogglerDisabled: boolean;
    constructor(dt: Table);
    onClick(event: Event): void;
    isEnabled(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RowToggler>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<RowToggler, "[pRowToggler]", never, {
    "data": "pRowToggler";
    "pRowTogglerDisabled": "pRowTogglerDisabled";
}, {}, never>;
}
export declare class ResizableColumn implements AfterViewInit, OnDestroy {
    dt: Table;
    el: ElementRef;
    zone: NgZone;
    pResizableColumnDisabled: boolean;
    resizer: HTMLSpanElement;
    resizerMouseDownListener: any;
    documentMouseMoveListener: any;
    documentMouseUpListener: any;
    constructor(dt: Table, el: ElementRef, zone: NgZone);
    ngAfterViewInit(): void;
    bindDocumentEvents(): void;
    unbindDocumentEvents(): void;
    onMouseDown(event: MouseEvent): void;
    onDocumentMouseMove(event: MouseEvent): void;
    onDocumentMouseUp(event: MouseEvent): void;
    isEnabled(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ResizableColumn>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ResizableColumn, "[pResizableColumn]", never, {
    "pResizableColumnDisabled": "pResizableColumnDisabled";
}, {}, never>;
}
export declare class ReorderableColumn implements AfterViewInit, OnDestroy {
    dt: Table;
    el: ElementRef;
    zone: NgZone;
    pReorderableColumnDisabled: boolean;
    dragStartListener: any;
    dragOverListener: any;
    dragEnterListener: any;
    dragLeaveListener: any;
    mouseDownListener: any;
    constructor(dt: Table, el: ElementRef, zone: NgZone);
    ngAfterViewInit(): void;
    bindEvents(): void;
    unbindEvents(): void;
    onMouseDown(event: any): void;
    onDragStart(event: any): void;
    onDragOver(event: any): void;
    onDragEnter(event: any): void;
    onDragLeave(event: any): void;
    onDrop(event: any): void;
    isEnabled(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ReorderableColumn>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ReorderableColumn, "[pReorderableColumn]", never, {
    "pReorderableColumnDisabled": "pReorderableColumnDisabled";
}, {}, never>;
}
export declare class EditableColumn implements AfterViewInit {
    dt: Table;
    el: ElementRef;
    zone: NgZone;
    data: any;
    field: any;
    pEditableColumnDisabled: boolean;
    pFocusCellSelector: string;
    constructor(dt: Table, el: ElementRef, zone: NgZone);
    ngAfterViewInit(): void;
    onClick(event: MouseEvent): void;
    openCell(): void;
    closeEditingCell(): void;
    onKeyDown(event: KeyboardEvent): void;
    findCell(element: any): any;
    moveToPreviousCell(event: KeyboardEvent): void;
    moveToNextCell(event: KeyboardEvent): void;
    findPreviousEditableColumn(cell: Element): any;
    findNextEditableColumn(cell: Element): any;
    isEnabled(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EditableColumn>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<EditableColumn, "[pEditableColumn]", never, {
    "data": "pEditableColumn";
    "field": "pEditableColumnField";
    "pEditableColumnDisabled": "pEditableColumnDisabled";
    "pFocusCellSelector": "pFocusCellSelector";
}, {}, never>;
}
export declare class EditableRow {
    el: ElementRef;
    data: any;
    pEditableRowDisabled: boolean;
    constructor(el: ElementRef);
    isEnabled(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EditableRow>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<EditableRow, "[pEditableRow]", never, {
    "data": "pEditableRow";
    "pEditableRowDisabled": "pEditableRowDisabled";
}, {}, never>;
}
export declare class InitEditableRow {
    dt: Table;
    editableRow: EditableRow;
    constructor(dt: Table, editableRow: EditableRow);
    onClick(event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<InitEditableRow>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<InitEditableRow, "[pInitEditableRow]", never, {}, {}, never>;
}
export declare class SaveEditableRow {
    dt: Table;
    editableRow: EditableRow;
    constructor(dt: Table, editableRow: EditableRow);
    onClick(event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SaveEditableRow>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SaveEditableRow, "[pSaveEditableRow]", never, {}, {}, never>;
}
export declare class CancelEditableRow {
    dt: Table;
    editableRow: EditableRow;
    constructor(dt: Table, editableRow: EditableRow);
    onClick(event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CancelEditableRow>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CancelEditableRow, "[pCancelEditableRow]", never, {}, {}, never>;
}
export declare class CellEditor implements AfterContentInit {
    dt: Table;
    editableColumn: EditableColumn;
    editableRow: EditableRow;
    templates: QueryList<PrimeTemplate>;
    inputTemplate: TemplateRef<any>;
    outputTemplate: TemplateRef<any>;
    constructor(dt: Table, editableColumn: EditableColumn, editableRow: EditableRow);
    ngAfterContentInit(): void;
    readonly editing: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CellEditor>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CellEditor, "p-cellEditor", never, {}, {}, ["templates"]>;
}
export declare class TableRadioButton {
    dt: Table;
    tableService: TableService;
    disabled: boolean;
    value: any;
    index: number;
    boxViewChild: ElementRef;
    checked: boolean;
    subscription: Subscription;
    constructor(dt: Table, tableService: TableService);
    ngOnInit(): void;
    onClick(event: Event): void;
    onFocus(): void;
    onBlur(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableRadioButton>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableRadioButton, "p-tableRadioButton", never, {
    "disabled": "disabled";
    "value": "value";
    "index": "index";
}, {}, never>;
}
export declare class TableCheckbox {
    dt: Table;
    tableService: TableService;
    disabled: boolean;
    value: any;
    index: number;
    boxViewChild: ElementRef;
    checked: boolean;
    subscription: Subscription;
    constructor(dt: Table, tableService: TableService);
    ngOnInit(): void;
    onClick(event: Event): void;
    onFocus(): void;
    onBlur(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableCheckbox>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableCheckbox, "p-tableCheckbox", never, {
    "disabled": "disabled";
    "value": "value";
    "index": "index";
}, {}, never>;
}
export declare class TableHeaderCheckbox {
    dt: Table;
    tableService: TableService;
    boxViewChild: ElementRef;
    disabled: boolean;
    checked: boolean;
    selectionChangeSubscription: Subscription;
    valueChangeSubscription: Subscription;
    constructor(dt: Table, tableService: TableService);
    ngOnInit(): void;
    onClick(event: Event): void;
    onFocus(): void;
    onBlur(): void;
    isDisabled(): boolean;
    ngOnDestroy(): void;
    updateCheckedState(): boolean;
    isAllFilteredValuesChecked(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableHeaderCheckbox>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableHeaderCheckbox, "p-tableHeaderCheckbox", never, {
    "disabled": "disabled";
}, {}, never>;
}
export declare class ReorderableRowHandle implements AfterViewInit {
    el: ElementRef;
    index: number;
    constructor(el: ElementRef);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ReorderableRowHandle>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ReorderableRowHandle, "[pReorderableRowHandle]", never, {
    "index": "pReorderableRowHandle";
}, {}, never>;
}
export declare class ReorderableRow implements AfterViewInit {
    dt: Table;
    el: ElementRef;
    zone: NgZone;
    index: number;
    pReorderableRowDisabled: boolean;
    mouseDownListener: any;
    dragStartListener: any;
    dragEndListener: any;
    dragOverListener: any;
    dragLeaveListener: any;
    dropListener: any;
    constructor(dt: Table, el: ElementRef, zone: NgZone);
    ngAfterViewInit(): void;
    bindEvents(): void;
    unbindEvents(): void;
    onMouseDown(event: any): void;
    onDragStart(event: any): void;
    onDragEnd(event: any): void;
    onDragOver(event: any): void;
    onDragLeave(event: any): void;
    isEnabled(): boolean;
    onDrop(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ReorderableRow>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ReorderableRow, "[pReorderableRow]", never, {
    "index": "pReorderableRow";
    "pReorderableRowDisabled": "pReorderableRowDisabled";
}, {}, never>;
}
export declare class TableModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<TableModule, [typeof Table, typeof SortableColumn, typeof SelectableRow, typeof RowToggler, typeof ContextMenuRow, typeof ResizableColumn, typeof ReorderableColumn, typeof EditableColumn, typeof CellEditor, typeof TableBody, typeof ScrollableView, typeof SortIcon, typeof TableRadioButton, typeof TableCheckbox, typeof TableHeaderCheckbox, typeof ReorderableRowHandle, typeof ReorderableRow, typeof SelectableRowDblClick, typeof EditableRow, typeof InitEditableRow, typeof SaveEditableRow, typeof CancelEditableRow], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.PaginatorModule], [typeof Table, typeof ɵngcc3.SharedModule, typeof SortableColumn, typeof SelectableRow, typeof RowToggler, typeof ContextMenuRow, typeof ResizableColumn, typeof ReorderableColumn, typeof EditableColumn, typeof CellEditor, typeof SortIcon, typeof TableRadioButton, typeof TableCheckbox, typeof TableHeaderCheckbox, typeof ReorderableRowHandle, typeof ReorderableRow, typeof SelectableRowDblClick, typeof EditableRow, typeof InitEditableRow, typeof SaveEditableRow, typeof CancelEditableRow]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<TableModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,