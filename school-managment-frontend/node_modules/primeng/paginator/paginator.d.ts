import { OnInit, ChangeDetectorRef, EventEmitter, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { SelectItem } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/dropdown';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from 'primeng/api';
export declare class Paginator implements OnInit, OnChanges {
    private cd;
    pageLinkSize: number;
    onPageChange: EventEmitter<any>;
    style: any;
    styleClass: string;
    alwaysShow: boolean;
    templateLeft: TemplateRef<any>;
    templateRight: TemplateRef<any>;
    dropdownAppendTo: any;
    dropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    totalRecords: number;
    rows: number;
    rowsPerPageOptions: any[];
    pageLinks: number[];
    rowsPerPageItems: SelectItem[];
    paginatorState: any;
    _first: number;
    constructor(cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(simpleChange: SimpleChanges): void;
    first: number;
    updateRowsPerPageOptions(): void;
    isFirstPage(): boolean;
    isLastPage(): boolean;
    getPageCount(): number;
    calculatePageLinkBoundaries(): number[];
    updatePageLinks(): void;
    changePage(p: number): void;
    updateFirst(): void;
    getPage(): number;
    changePageToFirst(event: any): void;
    changePageToPrev(event: any): void;
    changePageToNext(event: any): void;
    changePageToLast(event: any): void;
    onPageLinkClick(event: any, page: any): void;
    onRppChange(event: any): void;
    updatePaginatorState(): void;
    readonly currentPageReport: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Paginator>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Paginator, "p-paginator", never, {
    "pageLinkSize": "pageLinkSize";
    "alwaysShow": "alwaysShow";
    "dropdownScrollHeight": "dropdownScrollHeight";
    "currentPageReportTemplate": "currentPageReportTemplate";
    "totalRecords": "totalRecords";
    "rows": "rows";
    "first": "first";
    "style": "style";
    "styleClass": "styleClass";
    "templateLeft": "templateLeft";
    "templateRight": "templateRight";
    "dropdownAppendTo": "dropdownAppendTo";
    "showCurrentPageReport": "showCurrentPageReport";
    "rowsPerPageOptions": "rowsPerPageOptions";
}, {
    "onPageChange": "onPageChange";
}, never>;
}
export declare class PaginatorModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<PaginatorModule, [typeof Paginator], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.DropdownModule, typeof ɵngcc3.FormsModule, typeof ɵngcc4.SharedModule], [typeof Paginator, typeof ɵngcc2.DropdownModule, typeof ɵngcc3.FormsModule, typeof ɵngcc4.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<PaginatorModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdG9yLmQudHMiLCJzb3VyY2VzIjpbInBhZ2luYXRvci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNlbGVjdEl0ZW0gfSBmcm9tICdwcmltZW5nL2FwaSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQYWdpbmF0b3IgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBjZDtcbiAgICBwYWdlTGlua1NpemU6IG51bWJlcjtcbiAgICBvblBhZ2VDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGFsd2F5c1Nob3c6IGJvb2xlYW47XG4gICAgdGVtcGxhdGVMZWZ0OiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHRlbXBsYXRlUmlnaHQ6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZHJvcGRvd25BcHBlbmRUbzogYW55O1xuICAgIGRyb3Bkb3duU2Nyb2xsSGVpZ2h0OiBzdHJpbmc7XG4gICAgY3VycmVudFBhZ2VSZXBvcnRUZW1wbGF0ZTogc3RyaW5nO1xuICAgIHNob3dDdXJyZW50UGFnZVJlcG9ydDogYm9vbGVhbjtcbiAgICB0b3RhbFJlY29yZHM6IG51bWJlcjtcbiAgICByb3dzOiBudW1iZXI7XG4gICAgcm93c1BlclBhZ2VPcHRpb25zOiBhbnlbXTtcbiAgICBwYWdlTGlua3M6IG51bWJlcltdO1xuICAgIHJvd3NQZXJQYWdlSXRlbXM6IFNlbGVjdEl0ZW1bXTtcbiAgICBwYWdpbmF0b3JTdGF0ZTogYW55O1xuICAgIF9maXJzdDogbnVtYmVyO1xuICAgIGNvbnN0cnVjdG9yKGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhzaW1wbGVDaGFuZ2U6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIGZpcnN0OiBudW1iZXI7XG4gICAgdXBkYXRlUm93c1BlclBhZ2VPcHRpb25zKCk6IHZvaWQ7XG4gICAgaXNGaXJzdFBhZ2UoKTogYm9vbGVhbjtcbiAgICBpc0xhc3RQYWdlKCk6IGJvb2xlYW47XG4gICAgZ2V0UGFnZUNvdW50KCk6IG51bWJlcjtcbiAgICBjYWxjdWxhdGVQYWdlTGlua0JvdW5kYXJpZXMoKTogbnVtYmVyW107XG4gICAgdXBkYXRlUGFnZUxpbmtzKCk6IHZvaWQ7XG4gICAgY2hhbmdlUGFnZShwOiBudW1iZXIpOiB2b2lkO1xuICAgIHVwZGF0ZUZpcnN0KCk6IHZvaWQ7XG4gICAgZ2V0UGFnZSgpOiBudW1iZXI7XG4gICAgY2hhbmdlUGFnZVRvRmlyc3QoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgY2hhbmdlUGFnZVRvUHJldihldmVudDogYW55KTogdm9pZDtcbiAgICBjaGFuZ2VQYWdlVG9OZXh0KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGNoYW5nZVBhZ2VUb0xhc3QoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25QYWdlTGlua0NsaWNrKGV2ZW50OiBhbnksIHBhZ2U6IGFueSk6IHZvaWQ7XG4gICAgb25ScHBDaGFuZ2UoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgdXBkYXRlUGFnaW5hdG9yU3RhdGUoKTogdm9pZDtcbiAgICByZWFkb25seSBjdXJyZW50UGFnZVJlcG9ydDogc3RyaW5nO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGFnaW5hdG9yTW9kdWxlIHtcbn1cbiJdfQ==