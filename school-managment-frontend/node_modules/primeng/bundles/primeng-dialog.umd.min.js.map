{"version":3,"sources":["ng://primeng/dialog/dialog.ts"],"names":["idx","showAnimation","animation","style","transform","opacity","animate","hideAnimation","Dialog","el","renderer","zone","cd","this","draggable","resizable","closeOnEscape","closable","showHeader","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","keepInViewport","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","id","_style","_position","transformOptions","Object","defineProperty","prototype","_responsive","console","log","_breakpoint","_visible","value","maskVisible","__assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","close","event","emit","preventDefault","enableModality","_this","dismissableMask","maskClickListener","listen","wrapper","isSameNode","target","contains","modal","addClass","document","body","disableModality","unbindMaskClickListener","removeClass","detectChanges","maximize","maximized","moveOnTop","zIndex","String","zindex","getWrapperClass","wrapperClass","ui-widget-overlay ui-dialog-mask","ui-dialog-mask-scrollblocker","getPositionClass","toString","pos","find","item","position","initDrag","hasClass","parentElement","dragging","lastPageX","pageX","lastPageY","pageY","onKeydown","which","focusableElements","getFocusableElements","length","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","getOuterWidth","containerHeight","getOuterHeight","deltaX","deltaY","offset","getOffset","leftPos","left","topPos","top","viewport","getViewport","width","height","endDrag","initResize","resizing","onResize","contentHeight","contentViewChild","nativeElement","newWidth","newHeight","minWidth","minHeight","parseInt","onResizeEnd","bindGlobalListeners","bindDocumentKeydownListener","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentKeydownListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentEscapeListener","documentKeydownListener","bind","window","addEventListener","removeEventListener","documentDragListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentEscapeListener","appendContainer","appendTo","appendChild","restoreAppend","onAnimationStart","toState","element","onAnimationEnd","onContainerDestroy","ngOnDestroy","ElementRef","Renderer2","NgZone","ChangeDetectorRef","__decorate","Input","ContentChildren","Header","descendants","Footer","ViewChild","Output","Component","selector","template","animations","trigger","transition","useAnimation","DialogModule","NgModule","imports","CommonModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\n    ContentChildren,QueryList,ViewChild,NgZone, ChangeDetectorRef} from '@angular/core';\nimport {trigger,state,style,transition,animate, AnimationEvent, animation, useAnimation} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {Header,Footer,SharedModule} from 'primeng/api';\n\nlet idx: number = 0;\n\nconst showAnimation = animation([\n    style({ transform: '{{transform}}', opacity: 0 }),\n    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))\n]);\n\nconst hideAnimation = animation([\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\n]);\n\n@Component({\nselector: 'p-dialog',\ntemplate: `\n    <div class=\"ui-dialog-wrapper\" [ngClass]=\"getWrapperClass()\" *ngIf=\"maskVisible\">\n        <div #container [ngClass]=\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable,'ui-dialog-resizable':resizable, 'ui-dialog-maximized': maximized}\"\n            [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\"\n            [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\n            <div #titlebar class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\n                <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\n                <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"headerFacet && headerFacet.first\">\n                    <ng-content select=\"p-header\"></ng-content>\n                </span>\n                <div class=\"ui-dialog-titlebar-icons\">\n                    <a *ngIf=\"maximizable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"maximize()\" (keydown.enter)=\"maximize()\">\n                        <span [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\n                    </a>\n                    <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                        <span [class]=\"closeIcon\"></span>\n                    </a>\n                </div>\n            </div>\n            <div #content class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"contentStyle\">\n                <ng-content></ng-content>\n            </div>\n            <div #footer class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footerFacet && footerFacet.first\">\n                <ng-content select=\"p-footer\"></ng-content>\n            </div>\n            <div *ngIf=\"resizable\" class=\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\n        </div>\n    </div>\n`,\nanimations: [\n    trigger('animation', [\n        transition('void => visible', [\n            useAnimation(showAnimation)\n        ]),\n        transition('visible => void', [\n            useAnimation(hideAnimation)\n        ])\n    ])\n]\n})\nexport class Dialog implements OnDestroy {\n\n    @Input() header: string;\n\n    @Input() draggable: boolean = true;\n\n    @Input() resizable: boolean = true;\n\n    @Input() positionLeft: number;\n\n    @Input() positionTop: number;\n\n    @Input() contentStyle: any;\n\n    @Input() modal: boolean;\n\n    @Input() closeOnEscape: boolean = true;\n\n    @Input() dismissableMask: boolean;\n\n    @Input() rtl: boolean;\n\n    @Input() closable: boolean = true;\n\n    @Input() get responsive(): boolean {\n        return false;\n    };\n\n    set responsive(_responsive: boolean) {\n        console.log(\"Responsive property is deprecated.\");\n    }\n\n    @Input() appendTo: any;\n\n    @Input() styleClass: string;\n\n    @Input() showHeader: boolean = true;\n\n    @Input() get breakpoint(): number {\n        return 649;\n    };\n\n    set breakpoint(_breakpoint: number) {\n        console.log(\"Breakpoint property is not utilized and deprecated, use CSS media queries instead.\");\n    }\n\n    @Input() blockScroll: boolean = false;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() minX: number = 0;\n\n    @Input() minY: number = 0;\n\n    @Input() focusOnShow: boolean = true;\n\n    @Input() maximizable: boolean;\n\n    @Input() keepInViewport: boolean = true;\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\n\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\n\n    @ContentChildren(Header, {descendants: false}) headerFacet: QueryList<Header>;\n\n    @ContentChildren(Footer, {descendants: false}) footerFacet: QueryList<Header>;\n\n    @ViewChild('titlebar') headerViewChild: ElementRef;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ViewChild('footer') footerViewChild: ElementRef;\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\n\n    _visible: boolean;\n\n    maskVisible: boolean;\n\n    container: HTMLDivElement;\n\n    wrapper: HTMLElement;\n\n    dragging: boolean;\n\n    documentDragListener: any;\n\n    documentKeydownListener: any;\n\n    documentDragEndListener: any;\n\n    resizing: boolean;\n\n    documentResizeListener: any;\n\n    documentResizeEndListener: any;\n\n    documentEscapeListener: Function;\n\n    maskClickListener: Function;\n\n    lastPageX: number;\n\n    lastPageY: number;\n\n    preventVisibleChangePropagation: boolean;\n\n    maximized: boolean;\n\n    preMaximizeContentHeight: number;\n\n    preMaximizeContainerWidth: number;\n\n    preMaximizeContainerHeight: number;\n\n    preMaximizePageX: number;\n\n    preMaximizePageY: number;\n\n    id: string = `ui-dialog-${idx++}`;\n\n    _style: any = {};\n\n    _position: string = \"center\";\n\n    originalStyle: any;\n\n    transformOptions: any = \"scale(0.7)\";\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone, private cd: ChangeDetectorRef) { }\n\n    @Input() get visible(): any {\n        return this._visible;\n    }\n    set visible(value:any) {\n        this._visible = value;\n\n        if (this._visible && !this.maskVisible) {\n            this.maskVisible = true;\n        }\n    }\n\n    @Input() get style(): any {\n        return this._style;\n    }\n    set style(value:any) {\n        if (value) {\n            this._style = {...value};\n            this.originalStyle = value;\n        }\n    }\n\n    @Input() get position(): string {\n        return this._position;\n    };\n\n    set position(value: string) {\n        this._position = value;\n\n        switch (value) {\n            case 'topleft':\n            case 'bottomleft':\n            case 'left':\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n            break;\n            case 'topright':\n            case 'bottomright':\n            case 'right':\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\n            break;\n            case 'bottom':\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\n            break;\n            case 'top':\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\n            break;\n            default:\n                this.transformOptions = \"scale(0.7)\";\n            break;\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, 'button');\n        if (focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n    close(event: Event) {\n        this.visibleChange.emit(false);\n        event.preventDefault();\n    }\n\n    enableModality() {\n        if (this.closable && this.dismissableMask) {\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'click', (event: any) => {\n                if (!this.container.isSameNode(event.target) && !this.container.contains(event.target)) {\n                    this.close(event);\n                }\n            });\n        }\n\n        if (this.modal) {\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        if (this.wrapper) {\n            if (this.dismissableMask) {\n                this.unbindMaskClickListener();\n            }\n\n            if (this.modal) {\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            }\n\n            this.cd.detectChanges();\n        }\n    }\n\n    maximize() {\n        this.maximized = !this.maximized;\n\n        if (!this.modal && !this.blockScroll) {\n            if (this.maximized)\n                DomHandler.addClass(document.body, 'ui-overflow-hidden');\n            else\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\n        }\n    }\n\n    getWrapperClass() {\n        let wrapperClass = {'ui-widget-overlay ui-dialog-mask': this.modal, 'ui-dialog-mask-scrollblocker': this.modal || this.blockScroll};\n        wrapperClass[this.getPositionClass().toString()] = true;\n        return wrapperClass;\n    }\n\n    getPositionClass() {\n        const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n        const pos = positions.find(item => item === this.position);\n\n        return pos ? `ui-dialog-${pos}` : '';\n    }\n\n    initDrag(event: MouseEvent) {\n        if (DomHandler.hasClass(event.target, 'ui-dialog-titlebar-icon') ||Â DomHandler.hasClass((<HTMLElement> event.target).parentElement, 'ui-dialog-titlebar-icon')) {\n            return;\n        }\n\n        if (this.draggable) {\n            this.dragging = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (this.focusTrap) {\n            if (event.which === 9) {\n                event.preventDefault();\n\n                let focusableElements = DomHandler.getFocusableElements(this.container);\n\n                if (focusableElements && focusableElements.length > 0) {\n                    if (!document.activeElement) {\n                        focusableElements[0].focus();\n                    }\n                    else {\n                        let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                        if (event.shiftKey) {\n                            if (focusedIndex == -1 || focusedIndex === 0)\n                                focusableElements[focusableElements.length - 1].focus();\n                            else\n                                focusableElements[focusedIndex - 1].focus();\n                        }\n                        else {\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                                focusableElements[0].focus();\n                            else\n                                focusableElements[focusedIndex + 1].focus();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onDrag(event: MouseEvent) {\n        if (this.dragging) {\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let offset = DomHandler.getOffset(this.container);\n            let leftPos = offset.left + deltaX;\n            let topPos = offset.top + deltaY;\n            let viewport = DomHandler.getViewport();\n\n            if (this.keepInViewport) {\n                if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\n                    this._style.left = leftPos + 'px';\n                    this.lastPageX = event.pageX;\n                    this.container.style.left = leftPos + 'px';\n                }\n\n                if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\n                    this._style.top = topPos + 'px';\n                    this.lastPageY = event.pageY;\n                    this.container.style.top = topPos + 'px';\n                }\n            }\n            else {\n                this.lastPageX = event.pageX;\n                this.container.style.left = leftPos + 'px';\n                this.lastPageY = event.pageY;\n                this.container.style.top = topPos + 'px';\n            }\n        }\n    }\n\n    endDrag(event: MouseEvent) {\n        if (this.draggable) {\n            this.dragging = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    initResize(event: MouseEvent) {\n        if (this.resizable) {\n            this.resizing = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onResize(event: MouseEvent) {\n        if (this.resizing) {\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n            let newWidth = containerWidth + deltaX;\n            let newHeight = containerHeight + deltaY;\n            let minWidth = this.container.style.minWidth;\n            let minHeight = this.container.style.minHeight;\n            let offset = DomHandler.getOffset(this.container);\n            let viewport = DomHandler.getViewport();\n\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\n                this._style.width = newWidth + 'px';\n                this.container.style.width = this._style.width;\n            }\n\n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\n                this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';\n            }\n\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n        }\n    }\n\n    onResizeEnd() {\n        if (this.resizing) {\n            this.resizing = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    bindGlobalListeners() {\n        if (this.focusTrap) {\n            this.bindDocumentKeydownListener();\n        }\n\n        if (this.draggable) {\n            this.bindDocumentDragListener();\n            this.bindDocumentDragEndListener();\n        }\n\n        if (this.resizable) {\n            this.bindDocumentResizeListeners();\n        }\n\n        if (this.closeOnEscape && this.closable) {\n            this.bindDocumentEscapeListener();\n        }\n    }\n\n    unbindGlobalListeners() {\n        this.unbindDocumentDragListener();\n        this.unbindDocumentKeydownListener();\n        this.unbindDocumentDragEndListener();\n        this.unbindDocumentResizeListeners();\n        this.unbindDocumentEscapeListener();\n    }\n\n    bindDocumentKeydownListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentKeydownListener = this.onKeydown.bind(this);\n            window.document.addEventListener('keydown', this.documentKeydownListener);\n        });\n    }\n\n    unbindDocumentKeydownListener() {\n        if (this.documentKeydownListener) {\n            window.document.removeEventListener('keydown', this.documentKeydownListener);\n            this.documentKeydownListener = null;\n        }\n    }\n\n    bindDocumentDragListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragListener = this.onDrag.bind(this);\n            window.document.addEventListener('mousemove', this.documentDragListener);\n        });\n    }\n\n    unbindDocumentDragListener() {\n        if (this.documentDragListener) {\n            window.document.removeEventListener('mousemove', this.documentDragListener);\n            this.documentDragListener = null;\n        }\n    }\n\n    bindDocumentDragEndListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragEndListener = this.endDrag.bind(this);\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\n        });\n    }\n\n    unbindDocumentDragEndListener() {\n        if (this.documentDragEndListener) {\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\n            this.documentDragEndListener = null;\n        }\n    }\n\n    bindDocumentResizeListeners() {\n        this.zone.runOutsideAngular(() => {\n            this.documentResizeListener = this.onResize.bind(this);\n            this.documentResizeEndListener = this.onResizeEnd.bind(this);\n            window.document.addEventListener('mousemove', this.documentResizeListener);\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\n        });\n    }\n\n    unbindDocumentResizeListeners() {\n        if (this.documentResizeListener && this.documentResizeEndListener) {\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\n            this.documentResizeListener = null;\n            this.documentResizeEndListener = null;\n        }\n    }\n\n    bindDocumentEscapeListener() {\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\n                    this.close(event);\n                }\n            }\n        });\n    }\n\n    unbindDocumentEscapeListener() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.wrapper = this.container.parentElement;\n                this.onShow.emit({});\n                this.appendContainer();\n                this.moveOnTop();\n                this.bindGlobalListeners();\n\n                if (this.modal) {\n                    this.enableModality();\n                }\n\n                if (!this.modal && this.blockScroll) {\n                    DomHandler.addClass(document.body, 'ui-overflow-hidden');\n                }\n\n                if (this.focusOnShow) {\n                    this.focus();\n                }\n            break;\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n            break;\n        }\n    }\n\n    onContainerDestroy() {\n        this.unbindGlobalListeners();\n        this.dragging = false;\n\n        this.maskVisible = false;\n\n        if (this.maximized) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            this.maximized = false;\n        }\n\n        if (this.modal) {\n            this.disableModality();\n        }\n\n        if (this.blockScroll) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n\n        this.container = null;\n        this.wrapper = null;\n\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\n    }\n\n    ngOnDestroy() {\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n\n}\n\n@NgModule({\nimports: [CommonModule],\nexports: [Dialog,SharedModule],\ndeclarations: [Dialog]\n})\nexport class DialogModule { }\n"]}