import { ElementRef, OnInit, AfterContentInit, EventEmitter, QueryList, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/paginator';
export declare class DataView implements OnInit, AfterContentInit, BlockableUI, OnChanges {
    el: ElementRef;
    layout: string;
    paginator: boolean;
    rows: number;
    totalRecords: number;
    pageLinks: number;
    rowsPerPageOptions: any[];
    paginatorPosition: string;
    alwaysShowPaginator: boolean;
    paginatorDropdownAppendTo: any;
    paginatorDropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    lazy: boolean;
    emptyMessage: string;
    onLazyLoad: EventEmitter<any>;
    style: any;
    styleClass: string;
    trackBy: Function;
    filterBy: string;
    loading: boolean;
    loadingIcon: string;
    first: number;
    sortField: string;
    sortOrder: number;
    value: any[];
    onPage: EventEmitter<any>;
    onSort: EventEmitter<any>;
    onChangeLayout: EventEmitter<any>;
    header: any;
    footer: any;
    templates: QueryList<any>;
    _value: any[];
    listItemTemplate: TemplateRef<any>;
    gridItemTemplate: TemplateRef<any>;
    itemTemplate: TemplateRef<any>;
    paginatorLeftTemplate: TemplateRef<any>;
    paginatorRightTemplate: TemplateRef<any>;
    filteredValue: any[];
    filterValue: string;
    initialized: boolean;
    constructor(el: ElementRef);
    ngOnInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngAfterContentInit(): void;
    updateItemTemplate(): void;
    changeLayout(layout: string): void;
    updateTotalRecords(): void;
    paginate(event: any): void;
    sort(): void;
    isEmpty(): boolean;
    createLazyLoadMetadata(): any;
    getBlockableElement(): HTMLElement;
    filter(filter: string, filterMatchMode?: string): void;
    hasFilter(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataView>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataView, "p-dataView", never, {
    "layout": "layout";
    "pageLinks": "pageLinks";
    "paginatorPosition": "paginatorPosition";
    "alwaysShowPaginator": "alwaysShowPaginator";
    "paginatorDropdownScrollHeight": "paginatorDropdownScrollHeight";
    "currentPageReportTemplate": "currentPageReportTemplate";
    "emptyMessage": "emptyMessage";
    "trackBy": "trackBy";
    "loadingIcon": "loadingIcon";
    "first": "first";
    "totalRecords": "totalRecords";
    "rows": "rows";
    "paginator": "paginator";
    "rowsPerPageOptions": "rowsPerPageOptions";
    "paginatorDropdownAppendTo": "paginatorDropdownAppendTo";
    "showCurrentPageReport": "showCurrentPageReport";
    "lazy": "lazy";
    "style": "style";
    "styleClass": "styleClass";
    "filterBy": "filterBy";
    "loading": "loading";
    "sortField": "sortField";
    "sortOrder": "sortOrder";
    "value": "value";
}, {
    "onLazyLoad": "onLazyLoad";
    "onPage": "onPage";
    "onSort": "onSort";
    "onChangeLayout": "onChangeLayout";
}, ["header", "footer", "templates"]>;
}
export declare class DataViewLayoutOptions {
    dv: DataView;
    style: any;
    styleClass: string;
    constructor(dv: DataView);
    changeLayout(event: Event, layout: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataViewLayoutOptions>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataViewLayoutOptions, "p-dataViewLayoutOptions", never, {
    "style": "style";
    "styleClass": "styleClass";
}, {}, never>;
}
export declare class DataViewModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DataViewModule, [typeof DataView, typeof DataViewLayoutOptions], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.PaginatorModule], [typeof DataView, typeof ɵngcc2.SharedModule, typeof DataViewLayoutOptions]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DataViewModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXZpZXcuZC50cyIsInNvdXJjZXMiOlsiZGF0YXZpZXcuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCwgRXZlbnRFbWl0dGVyLCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJsb2NrYWJsZVVJIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVZpZXcgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIEJsb2NrYWJsZVVJLCBPbkNoYW5nZXMge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIGxheW91dDogc3RyaW5nO1xuICAgIHBhZ2luYXRvcjogYm9vbGVhbjtcbiAgICByb3dzOiBudW1iZXI7XG4gICAgdG90YWxSZWNvcmRzOiBudW1iZXI7XG4gICAgcGFnZUxpbmtzOiBudW1iZXI7XG4gICAgcm93c1BlclBhZ2VPcHRpb25zOiBhbnlbXTtcbiAgICBwYWdpbmF0b3JQb3NpdGlvbjogc3RyaW5nO1xuICAgIGFsd2F5c1Nob3dQYWdpbmF0b3I6IGJvb2xlYW47XG4gICAgcGFnaW5hdG9yRHJvcGRvd25BcHBlbmRUbzogYW55O1xuICAgIHBhZ2luYXRvckRyb3Bkb3duU2Nyb2xsSGVpZ2h0OiBzdHJpbmc7XG4gICAgY3VycmVudFBhZ2VSZXBvcnRUZW1wbGF0ZTogc3RyaW5nO1xuICAgIHNob3dDdXJyZW50UGFnZVJlcG9ydDogYm9vbGVhbjtcbiAgICBsYXp5OiBib29sZWFuO1xuICAgIGVtcHR5TWVzc2FnZTogc3RyaW5nO1xuICAgIG9uTGF6eUxvYWQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHRyYWNrQnk6IEZ1bmN0aW9uO1xuICAgIGZpbHRlckJ5OiBzdHJpbmc7XG4gICAgbG9hZGluZzogYm9vbGVhbjtcbiAgICBsb2FkaW5nSWNvbjogc3RyaW5nO1xuICAgIGZpcnN0OiBudW1iZXI7XG4gICAgc29ydEZpZWxkOiBzdHJpbmc7XG4gICAgc29ydE9yZGVyOiBudW1iZXI7XG4gICAgdmFsdWU6IGFueVtdO1xuICAgIG9uUGFnZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Tb3J0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNoYW5nZUxheW91dDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaGVhZGVyOiBhbnk7XG4gICAgZm9vdGVyOiBhbnk7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBfdmFsdWU6IGFueVtdO1xuICAgIGxpc3RJdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZ3JpZEl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcGFnaW5hdG9yTGVmdFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHBhZ2luYXRvclJpZ2h0VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZmlsdGVyZWRWYWx1ZTogYW55W107XG4gICAgZmlsdGVyVmFsdWU6IHN0cmluZztcbiAgICBpbml0aWFsaXplZDogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhzaW1wbGVDaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICB1cGRhdGVJdGVtVGVtcGxhdGUoKTogdm9pZDtcbiAgICBjaGFuZ2VMYXlvdXQobGF5b3V0OiBzdHJpbmcpOiB2b2lkO1xuICAgIHVwZGF0ZVRvdGFsUmVjb3JkcygpOiB2b2lkO1xuICAgIHBhZ2luYXRlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHNvcnQoKTogdm9pZDtcbiAgICBpc0VtcHR5KCk6IGJvb2xlYW47XG4gICAgY3JlYXRlTGF6eUxvYWRNZXRhZGF0YSgpOiBhbnk7XG4gICAgZ2V0QmxvY2thYmxlRWxlbWVudCgpOiBIVE1MRWxlbWVudDtcbiAgICBmaWx0ZXIoZmlsdGVyOiBzdHJpbmcsIGZpbHRlck1hdGNoTW9kZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgaGFzRmlsdGVyKCk6IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVmlld0xheW91dE9wdGlvbnMge1xuICAgIGR2OiBEYXRhVmlldztcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihkdjogRGF0YVZpZXcpO1xuICAgIGNoYW5nZUxheW91dChldmVudDogRXZlbnQsIGxheW91dDogc3RyaW5nKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGFWaWV3TW9kdWxlIHtcbn1cbiJdfQ==