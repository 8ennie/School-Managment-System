import { NgbCalendar } from './ngb-calendar';
import { NgbDate } from './ngb-date';
import { NgbDateStruct } from './ngb-date-struct';
import { DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled } from './datepicker-view-model';
import { Observable } from 'rxjs';
import { NgbDatepickerI18n } from './datepicker-i18n';
import * as ɵngcc0 from '@angular/core';
export declare class NgbDatepickerService {
    private _calendar;
    private _i18n;
    private _model$;
    private _dateSelect$;
    private _state;
    readonly model$: Observable<DatepickerViewModel>;
    readonly dateSelect$: Observable<NgbDate>;
    dayTemplateData: NgbDayTemplateData;
    disabled: boolean;
    displayMonths: number;
    firstDayOfWeek: number;
    focusVisible: boolean;
    maxDate: NgbDate;
    markDisabled: NgbMarkDisabled;
    minDate: NgbDate;
    navigation: 'select' | 'arrows' | 'none';
    outsideDays: 'visible' | 'collapsed' | 'hidden';
    constructor(_calendar: NgbCalendar, _i18n: NgbDatepickerI18n);
    focus(date: NgbDate): void;
    focusSelect(): void;
    open(date: NgbDate): void;
    select(date: NgbDate, options?: {
        emitEvent?: boolean;
    }): void;
    toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate;
    private _nextState;
    private _patchContexts;
    private _updateState;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgbDatepickerService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgbDatepickerService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci1zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImRhdGVwaWNrZXItc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nYkNhbGVuZGFyIH0gZnJvbSAnLi9uZ2ItY2FsZW5kYXInO1xuaW1wb3J0IHsgTmdiRGF0ZSB9IGZyb20gJy4vbmdiLWRhdGUnO1xuaW1wb3J0IHsgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJy4vbmdiLWRhdGUtc3RydWN0JztcbmltcG9ydCB7IERhdGVwaWNrZXJWaWV3TW9kZWwsIE5nYkRheVRlbXBsYXRlRGF0YSwgTmdiTWFya0Rpc2FibGVkIH0gZnJvbSAnLi9kYXRlcGlja2VyLXZpZXctbW9kZWwnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTmdiRGF0ZXBpY2tlckkxOG4gfSBmcm9tICcuL2RhdGVwaWNrZXItaTE4bic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ2JEYXRlcGlja2VyU2VydmljZSB7XG4gICAgcHJpdmF0ZSBfY2FsZW5kYXI7XG4gICAgcHJpdmF0ZSBfaTE4bjtcbiAgICBwcml2YXRlIF9tb2RlbCQ7XG4gICAgcHJpdmF0ZSBfZGF0ZVNlbGVjdCQ7XG4gICAgcHJpdmF0ZSBfc3RhdGU7XG4gICAgcmVhZG9ubHkgbW9kZWwkOiBPYnNlcnZhYmxlPERhdGVwaWNrZXJWaWV3TW9kZWw+O1xuICAgIHJlYWRvbmx5IGRhdGVTZWxlY3QkOiBPYnNlcnZhYmxlPE5nYkRhdGU+O1xuICAgIGRheVRlbXBsYXRlRGF0YTogTmdiRGF5VGVtcGxhdGVEYXRhO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIGRpc3BsYXlNb250aHM6IG51bWJlcjtcbiAgICBmaXJzdERheU9mV2VlazogbnVtYmVyO1xuICAgIGZvY3VzVmlzaWJsZTogYm9vbGVhbjtcbiAgICBtYXhEYXRlOiBOZ2JEYXRlO1xuICAgIG1hcmtEaXNhYmxlZDogTmdiTWFya0Rpc2FibGVkO1xuICAgIG1pbkRhdGU6IE5nYkRhdGU7XG4gICAgbmF2aWdhdGlvbjogJ3NlbGVjdCcgfCAnYXJyb3dzJyB8ICdub25lJztcbiAgICBvdXRzaWRlRGF5czogJ3Zpc2libGUnIHwgJ2NvbGxhcHNlZCcgfCAnaGlkZGVuJztcbiAgICBjb25zdHJ1Y3RvcihfY2FsZW5kYXI6IE5nYkNhbGVuZGFyLCBfaTE4bjogTmdiRGF0ZXBpY2tlckkxOG4pO1xuICAgIGZvY3VzKGRhdGU6IE5nYkRhdGUpOiB2b2lkO1xuICAgIGZvY3VzU2VsZWN0KCk6IHZvaWQ7XG4gICAgb3BlbihkYXRlOiBOZ2JEYXRlKTogdm9pZDtcbiAgICBzZWxlY3QoZGF0ZTogTmdiRGF0ZSwgb3B0aW9ucz86IHtcbiAgICAgICAgZW1pdEV2ZW50PzogYm9vbGVhbjtcbiAgICB9KTogdm9pZDtcbiAgICB0b1ZhbGlkRGF0ZShkYXRlOiBOZ2JEYXRlU3RydWN0LCBkZWZhdWx0VmFsdWU/OiBOZ2JEYXRlKTogTmdiRGF0ZTtcbiAgICBwcml2YXRlIF9uZXh0U3RhdGU7XG4gICAgcHJpdmF0ZSBfcGF0Y2hDb250ZXh0cztcbiAgICBwcml2YXRlIF91cGRhdGVTdGF0ZTtcbn1cbiJdfQ==