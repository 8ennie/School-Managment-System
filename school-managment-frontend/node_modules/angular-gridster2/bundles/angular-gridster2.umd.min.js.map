{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","GridType","DisplayGrid","CompactType","DirTypes","scrollSensitivity","scrollSpeed","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","GridsterCompact","gridster","destroy","checkCompact","$options","compactType","None","CompactUp","checkCompactUp","CompactLeft","checkCompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","checkCompactRight","CompactUpAndRight","CompactRightAndUp","checkCompactItem","item","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","y","itemChanged","checkCollision","x","GridsterComponentInterface","Injectable","GridsterConfigService","gridType","Fit","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","mobileBreakpoint","allowMultiLayer","defaultLayerIndex","maxLayerIndex","baseLayerIndex","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","OnDragAndResize","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","dirType","LTR","GridsterUtils","merge","obj1","obj2","properties","GridsterUtils_1","debounce","func","wait","timeout","context","args","later","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","checkDragHandleClass","currentTarget","checkContentClass","checkContentClassForEmptyCellClickEvent","current","hasAttribute","classnames","getAttribute","split","indexOf","parentNode","contentClass","compareItems","a","b","GridsterEmptyCell","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","oldItem","rect","getBoundingClientRect","scrollLeft","left","gridRenderer","getLeftMargin","scrollTop","top","getTopMargin","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","dPosition","RTL","transform","xPosition","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","checkCollisionTwoItems","item2","layerIndex","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","GridsterComponent_1","getNewArrayLength","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","checkCollisionTwoItemsForSwaping","horizontalBoundaryItem1","horizontalBoundaryItem2","verticalBoundaryItem1","verticalBoundaryItem2","checkCollisionForSwaping","findItemWithItemForSwaping","overallSize","size","newLength","Number","isFinite","ElementRef","type","Inject","Renderer2","ChangeDetectorRef","NgZone","Input","Component","selector","template","encapsulation","ViewEncapsulation","GridsterPush","gridsterItem","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","generateTempRandomId","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","cleanTempIds","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkItemChanges","checkPushBack","change","checkPushedItem","random","toString","replace","substr","filter","forEach","itemCollision","makePush","canBeDragged","find","lastIndexOf","j","pop","removeFromPushedItem","gridsterItemCollide","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterItemComponentInterface","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterSwap","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","pushedBy","gridsterItemCollision","copyCollisionX","copyCollisionY","copyX","copyY","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","diffLeft","diffTop","calculateItemPositionFromMousePosition","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleE","handleW","handleS","handleNE","handleNW","handleSE","handleSW","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","GridsterItemComponent","getLayerIndex","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","bringToFront","offset","topIndex","targetIndex","sendToBack","HostBinding","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport enum DirTypes {\n  LTR = 'ltr',\n  RTL = 'rtl'\n}\n\nexport type dirTypes = 'ltr' | 'rtl';\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  allowMultiLayer?: boolean;\n  defaultLayerIndex?: number;\n  maxLayerIndex?: number;\n  baseLayerIndex?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  swapWhileDragging?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  disableScrollHorizontal?: boolean;\n  disableScrollVertical?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  enableOccupiedCellDrop?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  dirType?: dirTypes;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  checkCollisionForSwaping: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  checkCollisionTwoItems: (item: GridsterItem, item2: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== e.clientY) {\n      cancelVertical();\n    }\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== e.clientX) {\n      cancelHorizontal();\n    }\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {CompactType, DirTypes, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  allowMultiLayer: false,\n  defaultLayerIndex: 0,\n  maxLayerIndex: 2,\n  baseLayerIndex: 1,\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  swapWhileDragging: false, // allow items to switch position while dragging\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false, // disable horizontal scrolling\n  disableScrollVertical: false, // disable vertical scrolling\n  disableAutoPositionOnConflict: false,  // disable auto-position of items on conflict state,\n  dirType: DirTypes.LTR, // page direction, rtl=right to left ltr= left to right, if you use rtl language set dirType to rtl\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkDragHandleClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkDragHandleClass(target: any, current: any, dragHandleClass: string, ignoreContentClass): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') ) {\n      const classnames = target.getAttribute('class').split(' ');\n      if (classnames.indexOf(dragHandleClass) > -1) {\n        return true;\n      }\n      if (classnames.indexOf(ignoreContentClass) > -1) {\n        return false;\n      }\n    }\n    return GridsterUtils.checkDragHandleClass(target.parentNode, current, dragHandleClass, ignoreContentClass);\n  }\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.gridRenderer.getLeftMargin();\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.gridRenderer.getTopMargin();\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes, GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.curWidth / item.cols) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): { left?: string, transform?: string } {\n    const dPosition = this.gridster.$options.dirType === DirTypes.RTL ? -d : d;\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + dPosition + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + dPosition) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): { top?: string, transform?: string } {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    const xPosition = this.gridster.$options.dirType === DirTypes.RTL ? -x : x;\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + xPosition + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + xPosition + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterCompact} from './gridsterCompact.service';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 0;\n  rows = 0;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(@Inject(ElementRef) el: ElementRef, @Inject(Renderer2) public renderer: Renderer2,\n              @Inject(ChangeDetectorRef) public cdRef: ChangeDetectorRef,\n              @Inject(NgZone) public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    const collision = item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n    if (!collision) {\n      return false;\n    }\n    if (!this.$options.allowMultiLayer) {\n      return true;\n    }\n    const defaultLayerIndex = this.$options.defaultLayerIndex;\n    const layerIndex = item.layerIndex === undefined ? defaultLayerIndex : item.layerIndex;\n    const layerIndex2 = item2.layerIndex === undefined ? defaultLayerIndex : item2.layerIndex;\n    return layerIndex === layerIndex2;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width;\n    let height;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows;\n    let columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = GridsterComponent.getNewArrayLength(this.columns, this.curWidth, this.curColWidth);\n    this.gridRows.length = GridsterComponent.getNewArrayLength(this.rows, this.curHeight, this.curRowHeight);\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0;\n    let colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  // ------ Functions for swapWhileDragging option\n\n  // identical to checkCollision() except that here we add bondaries.\n  static checkCollisionTwoItemsForSwaping(item: GridsterItem, item2: GridsterItem): boolean {\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols\n      && item.x + item.cols > item2.x + horizontalBoundaryItem2\n      && item.y + verticalBoundaryItem1 < item2.y + item2.rows\n      && item.y + item.rows > item2.y + verticalBoundaryItem2;\n  }\n\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItemForSwaping(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\n  findItemWithItemForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  // ------ End of functions for swapWhileDragging option\n\n  // tslint:disable-next-line:member-ordering\n  private static getNewArrayLength(length: number, overallSize: number, size: number): number {\n    const newLength = Math.max(length, Math.floor(overallSize / size));\n\n    if (newLength < 0) {\n      return 0;\n    }\n\n    if (Number.isFinite(newLength)) {\n      return Math.floor(newLength);\n    }\n\n    return 0;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  bringToFront: (offset: number) => void;\n  sendToBack: (v: number) => void ;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    gridsterItem['id'] = this.generateTempRandomId();\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      this.cleanTempIds();\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private generateTempRandomId() : string {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  private cleanTempIds(){\n    const allItemsWithIds = this.gridster.grid.filter((el:GridsterItemComponentInterface) => el['id']);\n    allItemsWithIds.forEach((el: GridsterItemComponentInterface) => delete el['id']);\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (!itemCollision['id']) {\n        itemCollision['id'] = this.generateTempRandomId();\n      }\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el['id'] === itemCollision['id'];\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    let gridsterItemCollision;\n    if (this.gridster.$options.swapWhileDragging) {\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\n    }else{\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\n    }\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n        if (this.gridster.$options.swapWhileDragging) {\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n          this.setSwapItem();\n        }\n      }\n    }\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  mousedown: () => void;\n  touchstart: () => void;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.diffLeft = (e.clientX - this.gridster.el.scrollWidth + this.gridsterItem.left);\n    } else {\n      this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    }\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.left = this.gridster.el.scrollWidth - e.clientX + this.diffLeft;\n    } else {\n      this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    }\n\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: (e: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      } else {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      } else {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      }\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation,\n  Inject,\n  HostBinding\n} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  @HostBinding('style.z-index')\n  get zIndex(): number {\n    return this.getLayerIndex() + this.gridster.$options.baseLayerIndex;\n  }\n\n  constructor(@Inject(ElementRef) el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2, @Inject(NgZone) private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      layerIndex: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n  bringToFront(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    const topIndex = this.gridster.$options.maxLayerIndex;\n    if (layerIndex < topIndex) {\n      const targetIndex = offset ? layerIndex + offset : topIndex;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex > topIndex ? topIndex : targetIndex;\n    }\n  }\n  sendToBack(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    if (layerIndex > 0) {\n      const targetIndex = offset ? layerIndex - offset : 0;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex < 0 ? 0 : targetIndex;\n    }\n  }\n\n  private getLayerIndex(): number {\n    if (this.item.layerIndex !== undefined) {\n      return this.item.layerIndex;\n    }\n    if (this.gridster.$options.defaultLayerIndex !== undefined) {\n      return this.gridster.$options.defaultLayerIndex;\n    }\n    return 0;\n  }\n\n}\n","import {Component, ElementRef, OnDestroy, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(@Inject(ElementRef)  el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: [],\n  entryComponents: [GridsterComponent, GridsterItemComponent]\n})\nexport class GridsterModule {\n}\n"]}