import { GridsterItemComponentInterface } from './gridsterItemComponent.interface';
import * as ɵngcc0 from '@angular/core';
export declare class GridsterPush {
    fromSouth: string;
    fromNorth: string;
    fromEast: string;
    fromWest: string;
    private pushedItems;
    private pushedItemsTemp;
    private pushedItemsTempPath;
    private pushedItemsPath;
    private gridsterItem;
    private gridster;
    private pushedItemsOrder;
    private tryPattern;
    constructor(gridsterItem: GridsterItemComponentInterface);
    destroy(): void;
    pushItems(direction: string, disable?: boolean): boolean;
    restoreTempItems(): void;
    restoreItems(): void;
    setPushedItems(): void;
    checkPushBack(): void;
    private generateTempRandomId;
    private cleanTempIds;
    private push;
    private trySouth;
    private tryNorth;
    private tryEast;
    private tryWest;
    private addToTempPushed;
    private removeFromTempPushed;
    private addToPushed;
    private removeFromPushed;
    private removeFromPushedItem;
    private checkPushedItem;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridsterPush>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<GridsterPush>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZHN0ZXJQdXNoLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiZ3JpZHN0ZXJQdXNoLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JpZHN0ZXJJdGVtQ29tcG9uZW50SW50ZXJmYWNlIH0gZnJvbSAnLi9ncmlkc3Rlckl0ZW1Db21wb25lbnQuaW50ZXJmYWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR3JpZHN0ZXJQdXNoIHtcclxuICAgIGZyb21Tb3V0aDogc3RyaW5nO1xyXG4gICAgZnJvbU5vcnRoOiBzdHJpbmc7XHJcbiAgICBmcm9tRWFzdDogc3RyaW5nO1xyXG4gICAgZnJvbVdlc3Q6IHN0cmluZztcclxuICAgIHByaXZhdGUgcHVzaGVkSXRlbXM7XHJcbiAgICBwcml2YXRlIHB1c2hlZEl0ZW1zVGVtcDtcclxuICAgIHByaXZhdGUgcHVzaGVkSXRlbXNUZW1wUGF0aDtcclxuICAgIHByaXZhdGUgcHVzaGVkSXRlbXNQYXRoO1xyXG4gICAgcHJpdmF0ZSBncmlkc3Rlckl0ZW07XHJcbiAgICBwcml2YXRlIGdyaWRzdGVyO1xyXG4gICAgcHJpdmF0ZSBwdXNoZWRJdGVtc09yZGVyO1xyXG4gICAgcHJpdmF0ZSB0cnlQYXR0ZXJuO1xyXG4gICAgY29uc3RydWN0b3IoZ3JpZHN0ZXJJdGVtOiBHcmlkc3Rlckl0ZW1Db21wb25lbnRJbnRlcmZhY2UpO1xyXG4gICAgZGVzdHJveSgpOiB2b2lkO1xyXG4gICAgcHVzaEl0ZW1zKGRpcmVjdGlvbjogc3RyaW5nLCBkaXNhYmxlPzogYm9vbGVhbik6IGJvb2xlYW47XHJcbiAgICByZXN0b3JlVGVtcEl0ZW1zKCk6IHZvaWQ7XHJcbiAgICByZXN0b3JlSXRlbXMoKTogdm9pZDtcclxuICAgIHNldFB1c2hlZEl0ZW1zKCk6IHZvaWQ7XHJcbiAgICBjaGVja1B1c2hCYWNrKCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIGdlbmVyYXRlVGVtcFJhbmRvbUlkO1xyXG4gICAgcHJpdmF0ZSBjbGVhblRlbXBJZHM7XHJcbiAgICBwcml2YXRlIHB1c2g7XHJcbiAgICBwcml2YXRlIHRyeVNvdXRoO1xyXG4gICAgcHJpdmF0ZSB0cnlOb3J0aDtcclxuICAgIHByaXZhdGUgdHJ5RWFzdDtcclxuICAgIHByaXZhdGUgdHJ5V2VzdDtcclxuICAgIHByaXZhdGUgYWRkVG9UZW1wUHVzaGVkO1xyXG4gICAgcHJpdmF0ZSByZW1vdmVGcm9tVGVtcFB1c2hlZDtcclxuICAgIHByaXZhdGUgYWRkVG9QdXNoZWQ7XHJcbiAgICBwcml2YXRlIHJlbW92ZUZyb21QdXNoZWQ7XHJcbiAgICBwcml2YXRlIHJlbW92ZUZyb21QdXNoZWRJdGVtO1xyXG4gICAgcHJpdmF0ZSBjaGVja1B1c2hlZEl0ZW07XHJcbn1cclxuIl19